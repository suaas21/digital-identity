apiVersion: apps/v1
kind: Deployment
metadata:
  name: enroller-api
  labels:
    app: enroller-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enroller-api
  template:
    metadata:
      labels:
        app: enroller-api
    spec:
      volumes:
        - name: rcaadmin-msp
          secret:
            secretName: rcaadmin-msp
        - name: tls-certs
          secret:
            secretName: tls-certs
        - name: msp-store
          emptyDir: { }
      # Init container to create directory structure
      initContainers:
        - name: setup-msp-dirs
          image: busybox:1.35
          command: [ 'sh', '-c',
            'mkdir -p /etc/rcaadmin/msp/{cacerts,keystore,signcerts,admincerts} &&
          cp /secrets/cacert.pem /etc/rcaadmin/msp/cacerts/ &&
          cp /secrets/keystore-key.pem /etc/rcaadmin/msp/keystore/ &&
          cp /secrets/signcert.pem /etc/rcaadmin/msp/signcerts/ &&
          cp /secrets/admincert.pem /etc/rcaadmin/msp/admincerts/' ]
          volumeMounts:
            - name: rcaadmin-msp
              mountPath: /secrets
            - name: msp-store
              mountPath: /etc/rcaadmin/msp
      containers:
        - name: enroller-api
          image: localhost:5000/enroller-api:latest
          ports:
            - containerPort: 8080
          env:
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vault-secret
                  key: token
          volumeMounts:
            - name: msp-store
              mountPath: /etc/rcaadmin/msp
            - name: tls-certs
              mountPath: /etc/tls/tls-cert.pem
              subPath: tls-cert.pem
              readOnly: true
---
kind: Service
apiVersion: v1
metadata:
  name: enroller-api
spec:
  selector:
    app: enroller-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: enroller-api
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  # labels:
  #   app: enroller-api
  #   app.kubernetes.io/instance: fabricpeer
  #   app.kubernetes.io/managed-by: fabric-operator
  #   app.kubernetes.io/name: fabric
  #   creator: fabric
  #   orgname: Org1MSP
spec:
  ingressClassName: nginx
  rules:
    - host: enrollerapi.localho.st
      http:
        paths:
          - backend:
              service:
                name: enroller-api
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - enrollerapi.localho.st